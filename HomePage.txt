package com.balotiyash.vespbottomupbuttons

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.Image
import androidx.compose.foundation.background
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.layout.width
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material3.Button
import androidx.compose.material3.ButtonDefaults
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Surface
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.setValue
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.shadow
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.navigation.NavController
import com.balotiyash.vespbottomupbuttons.ui.theme.VESPBottomUpButtonsTheme

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            VESPBottomUpButtonsTheme {
                 //A surface container using the 'background' color from the theme
                Surface(
                    modifier = Modifier.fillMaxSize(),
                    color = MaterialTheme.colorScheme.background
                ) {
                    BtmSht()
                }
            }
        }
    }
}



@Composable
fun ButtonDesign(name: Int, string: String, modifier: Modifier = Modifier) {
    var result by remember { mutableStateOf(1) }
    val imageName = when(name) {
        1 -> R.drawable.attendance_removebg_preview
        2 -> R.drawable.books_photoroom_png_photoroom
        3 -> R.drawable.calender_photoroom_png_photoroom
        4 -> R.drawable.logout
        5 -> R.drawable.reciept_photoroom_png_photoroom
        else -> R.drawable.result_photoroom_png_photoroom
    }
    Button(
        onClick = {
        },
        colors = ButtonDefaults.buttonColors(Color(0XFFFEEFCD)),
        modifier = Modifier
            .height(170.dp)
            .width(170.dp)
//            .fillMaxWidth()
            .padding(12.dp)
            .shadow(
                elevation = 8.dp,
                shape = RoundedCornerShape(20.dp),
                clip = true,
                ambientColor = Color.White,
                spotColor = Color.Red
            )
        ,shape = RoundedCornerShape(20.dp),
    ) {
        Box {
            Image(
                painter = painterResource(imageName),
                contentDescription = null
            )
            Text(
                text = string,
                modifier = Modifier
                    .align(alignment = Alignment.BottomCenter)
                    .padding(top = 110.dp),
                color = Color(0xFF6D4C41)
            )
        }
    }
}

@Composable
fun BtmSht(modifier: Modifier = Modifier) {
    Column(
        Modifier
            .background(Color(0xFFFFC107))
            .fillMaxSize(),
        horizontalAlignment = Alignment.CenterHorizontally,
        verticalArrangement = Arrangement.Center
    ) {
        Row(
            modifier = Modifier
//                .weight(1f)
        ) {
            ButtonDesign(name = 1, string = "Attendance")
            ButtonDesign(name = 2, string = "MAPs & Notes")
        }
        Row(
            modifier = Modifier
//                .weight(1f)
        ) {
            ButtonDesign(name = 3, string = "Calender")
            ButtonDesign(name = 5, string = "Fee Reciept")
        }
        Row(
            modifier = Modifier
//                .weight(1f)
        ) {
            ButtonDesign(name = 6, string = "Result")
            ButtonDesign(name = 4, string = "Logout")
        }
//        Row(
//            modifier = Modifier
////                .weight(1f)
//        ) {
//            ButtonDesign(name = 1, string = "Attendance")
//            ButtonDesign(name = 2, string = "MAPs & Notes")
//        }
    }
}

@Preview(
    showBackground = true,
    showSystemUi = true
)
@Composable
fun BottomSheetPreview() {
    VESPBottomUpButtonsTheme {
        BtmSht()
    }
}
