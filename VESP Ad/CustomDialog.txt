package com.balotiyash.vespopupad

import androidx.compose.foundation.Image
import androidx.compose.foundation.border
import androidx.compose.foundation.clickable
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material.*
import androidx.compose.material3.Button
import androidx.compose.material3.ButtonDefaults
import androidx.compose.material3.Card
import androidx.compose.material3.CardDefaults
import androidx.compose.material3.Icon
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.ExperimentalComposeUiApi
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.scale
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.layout.ContentScale
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.unit.dp
import androidx.compose.ui.window.Dialog
import androidx.compose.ui.window.DialogProperties
import com.balotiyash.vespopupad.ui.theme.orange

@OptIn(ExperimentalComposeUiApi::class)
@Composable
fun CustomDialog(
    onDismiss:()->Unit,
    onConfirm:()->Unit
) {
    Dialog(
        onDismissRequest = {
            onDismiss()
        },
        properties = DialogProperties(
            usePlatformDefaultWidth = false
        )
    ) {
        Card(
            elevation = CardDefaults.cardElevation(
                defaultElevation = 5.dp
            ),
            shape = RoundedCornerShape(15.dp),
            modifier = Modifier
                .fillMaxHeight(0.75f)
                .fillMaxWidth(0.9f)
//                .fillMaxSize(0.90f)
                .border(2.dp, Color(0xFFFFC107), shape = RoundedCornerShape(15.dp))
        ){
            Box(
                modifier = Modifier
//                    .fillMaxWidth()
//                    .padding(15.dp),
//                    .scale(1f),
//                verticalArrangement = Arrangement.spacedBy(25.dp)
//                verticalArrangement = Arrangement.Center,
//                horizontalAlignment = Alignment.CenterHorizontally
            ){

                Image(
                    painter = painterResource(id = R.drawable.vesp_ad),
                    contentDescription = null,
                    contentScale = ContentScale.FillBounds,
                    modifier = Modifier
                        .fillMaxSize()
                )
//                Icon(
//                    painter = painterResource(id = R.drawable.cancel_fill0_wght400_grad0_opsz48),
//                    contentDescription = null,
//                    modifier = Modifier
//                        .align(alignment = Alignment.TopEnd)
//                        .clickable { onDismiss() }
//                        .padding(0.dp, 84.dp, 20.dp, 0.dp)
//                        .scale(3f)
//                )
                Button(
                    onClick = { onDismiss() },
                    colors = ButtonDefaults.buttonColors(
                        containerColor = Color(0xFFFFC107),
                        contentColor = Color(0xFF6D4C41)
                    ),
                    modifier = Modifier
                        .align(alignment = Alignment.BottomStart)
                        .padding(start = 4.dp)
                ) {
                    Text(
                        text = "Close"
                    )
                }
//                Button(
//                    onClick = {
//                        onDismiss()
//                    },
//                    colors = ButtonDefaults.buttonColors(
//                        containerColor = orange,
//                        contentColor = white
//                    ),
//                    modifier = Modifier
//                        .fillMaxWidth()
////                        .weight(1f)
//                    ,
//                    shape = CircleShape
//                ) {
//                    Text(
//                        text = "Cancel",
//                        style = MaterialTheme.typography.headlineSmall,
//                        fontWeight = FontWeight.Bold,
//                        textAlign = TextAlign.Center,
//                    )
//                }
//                Row(
//                    modifier = Modifier
//                        .fillMaxWidth(),
//                    horizontalArrangement = Arrangement.spacedBy(30.dp),
//                    verticalAlignment = Alignment.CenterVertically
//                ){
//                    Button(
//                        onClick = {
//                            onDismiss()
//                        },
//                        colors = ButtonDefaults.buttonColors(
//                            containerColor = orange,
//                            contentColor = white
//                        ),
//                        modifier = Modifier
//                            .fillMaxWidth()
//                            .weight(1f)
//                        ,
//                        shape = CircleShape
//                    ) {
//                        Text(
//                            text = "Cancel",
//                            style = MaterialTheme.typography.headlineSmall,
//                            fontWeight = FontWeight.Bold,
//                            textAlign = TextAlign.Center,
//                        )
//                    }
//                    Button(
//                        onClick = {
//                            onConfirm()
//                        },
//                        colors = ButtonDefaults.buttonColors(
//                            containerColor = orange,
//                            contentColor = white
//                        ),
//                        modifier = Modifier
//                            .fillMaxWidth()
//                            .weight(1f),
//                        shape = CircleShape
//                    ) {
//                        Text(
//                            text = "Confirm",
//                            style = MaterialTheme.typography.headlineSmall,
//                            fontWeight = FontWeight.Bold,
//                            textAlign = TextAlign.Center,
//                        )
//                    }
//                }

            }
        }
    }
}